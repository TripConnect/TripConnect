type User {
    user_id: ID!
    display_name: String
}

type Token {
    user_id: ID!
    access_token: String!
}

type Trip {
    trip_id: ID!
}

type TripUser {
    trip_id: Int!
    user_id: String!
}

type AuthPayload {
    token: Token
}

type StatusPayload {
    status: Boolean!
}

type ChatMessage {
    from_user_id: String!
    to_user_id: String!
    content: String!
}

type Conversation {
    conversation_id: ID!
    name: String
    messages: [ChatMessage]!
}

type Query {
    status: StatusPayload
    loadUser(user_id: String!): User!
    searchUser(display_name_pattern: String!): [User]!
    loadTripMembers(trip_id: ID!): [TripUser]!
    loadConversation(conversation_id: ID!, page: Int, limit: Int): Conversation!
    loadConversations(page:Int, limit: Int): [Conversation]!
}

type Mutation {
    login(username: String!, password: String!): AuthPayload!
    register(username: String!, password: String!, display_name: String!): User
    createTrip(name: String!): Trip!
    joinTrip(trip_id: ID!): TripUser!
    createConversation(name: String, user_ids: [String!]!, type: String!): Conversation!
}
