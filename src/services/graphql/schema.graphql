type User {
    user_id: ID!
    display_name: String
}

type Token {
    user_id: ID!
    access_token: String!
}

type Trip {
    trip_id: ID!
}

type TripUser {
    trip_id: Int!
    user_id: String!
}

type AuthPayload {
    token: Token
}

type StatusPayload {
    status: Boolean!
}

type Query {
    status: StatusPayload
    loadUser(user_id: String!): User!
    loadTripMembers(trip_id: ID!): [TripUser]!
}

type Mutation {
    login(username: String!, password: String!): AuthPayload!
    register(username: String!, password: String!): User
    createTrip(name: String!): Trip!
    joinTrip(trip_id: ID!): TripUser!
}
